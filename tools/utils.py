from plotly.graph_objs import Figure
from llama_index.core.tools import ToolOutput

def clean_tool_output(tool_output):
    """
    Clean tool output to avoid large payloads.
    - Replace or truncate raw_input/raw_output
    - Retain human-readable summary in content
    """
    clean_content = ""

    # Handle chart figures
    if isinstance(tool_output.raw_output, Figure):
        clean_content = f"[Chart generated by {tool_output.tool_name}]"

    # Shorten large string content
    elif isinstance(tool_output.content, str):
        clean_content = (
            tool_output.content[:300] + "..." 
            if len(tool_output.content) > 300 
            else tool_output.content
        )
    else:
        clean_content = "[Tool executed]"

    # Sanitize raw_input too (e.g. filepath or huge dict)
    clean_input = tool_output.raw_input

    # Replace long filepaths or dicts
    if isinstance(clean_input, dict):
        for k in clean_input:
            if isinstance(clean_input[k], str) and len(clean_input[k]) > 100:
                clean_input[k] = "[input truncated]"
            elif isinstance(clean_input[k], list) or isinstance(clean_input[k], dict):
                clean_input[k] = "[structured input removed]"

    return ToolOutput(
        tool_name=tool_output.tool_name,
        content=clean_content,
        raw_input=clean_input,
        raw_output=None
    )
